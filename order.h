#ifndef ORDER_H
#define ORDER_H
enum e_cmd {
  JGQD = 0x01010F,  //启动
  WARNING_RESET = 0x010114,
  DL_SET1 = 0x010101,
  DL_SET2 = 0x010102,
  DL_SET3,
  DL_SET4 = 0x010133,
  DL_SET5 = 0x01013b,
  LD1_SWITCH = 0x010104,
  LD2_SWITCH,
  LD3_SWITCH,
  LD4_SWITCH = 0x010135,
  LD5_SWITCH = 0x01013d,
  DL_JX1 = 0x010111,
  DL_JX2 = 0x010112,
  DL_JX3 = 0x010113,
  DL_JX4 = 0x010134,
  DL_JX5 = 0x01013C,
  FREQ = 0x010107,
  BURST_NUM,
  DELAY1_SET1,
  DELAY1_SET2,
  DELAY1_SET3,
  MK_SET2 = 0x010110,

  /*7e e7 7e 01 01 09 00 02 00 00 0b 0d 0d //延时 1 延时 1 设定 0-5000*2.5nS
步长 1*2.5nS 7e e7 7e 01 01 09 00 02 00 64 6f 71 0d //延时 1 7e e7 7e 01 01 09
00 02 13 88 90 A8 0d //延时 1 7e e7 7e 01 01 0a 00 02 00 01 09 0f 0d //延时 2
延时 2 设定 0-5000*2.5nS 步长 1*2.5nS 7e e7 7e 01 01 0a 00 02 00 64 6c 72 0d
//延时 2 7e e7 7e 01 01 0a 00 02 13 88 93 a9 0d //延时 2 7e e7 7e 01 01 0e 00 02
00 01 0d 13 0d //延时 3 设定 0-5000*2.5nS 步长 1*2.5nS POD 7e e7 7e 01 01 0e 00
02 03 e8 e7 fd 0d //延时 3 设定 7e e7 7e 01 01 10 00 02 00 01 13 15 0d //脉宽 2
脉宽 2 设定 1-5000*2.5nS 步长 1*2.5nS 7e e7 7e 01 01 10 00 02 00 64 76 78 0d
//脉宽 2 7e e7 7e 01 01 10 00 02 13 88 89 af 0d //脉宽 2*/
  F_max_set_out = 0x01012e,
  F_min_set_out = 0x01012f,
  FREQ_Z = 0x010140,
  FREQ_F = 0x010141,

  BURST_max_set_out = 0x010130,
  BURST_min_set_out,
  CF_MODE = 0x01010D,
  /*
              7e e7 7e 01 01 0d 00 01 00 0c 10 0d //内触发模式 只针对pod 模式
              7e e7 7e 01 01 0d 00 01 01 0d 11 0d //外触发模式 1
              7e e7 7e 01 01 0d 00 01 02 0e 12 0d //外触发模式 2*/
  GL_SWITCH = 0x01011A,
  GL_NK = 0x01011b, /*
 7E E7 7E 01 01 1b 00 02 00 00 19 1f 0D // 功率内控百分比控设定 0% 0%-100% 步长
 1% 7E E7 7E 01 01 1b 00 02 00 32 2b 51 0D // 功率内控百分比控设定 50% 7E E7 7E
 01 01 1b 00 02 00 64 7d 83 0D // 功率内控百分比设定 100%
 */
  POD_OR_GATE = 0x01012a,
  DEBUG_SWITCH = 0x010116,
  WD_SHG,
  WD_THG,
  /*7E E7 7E 01 01 17 00 02 05 dc xx xx 0D // SHG 设定温度 15.00°C 15-50 度 步长
0.01 度 7E E7 7E 01 01 17 00 02 0b b8 xx xx 0D // SHG 设定温度 30.00°C 7E E7 7E
01 01 17 00 02 13 88 xx xx 0D // SHG 设定温度 50.00°C 7E E7 7E 01 01 18 00 02 05
dc xx xx 0D // THG 设定温度 15.00°C 15-50 度 步长 0.01 度 7E E7 7E 01 01 18 00
02 0b b8 xx xx 0D // THG 设定温度 30.00°C
7E E7 7E 01 01 18 00 02 13 88 xx xx 0D // THG 设定温度 50.00°C*/
  MODE_SWITCH = 0x010146, /*7E E7 7E 01 01 46 00 01 01 46 4a 0D //模式 1
 7E E7 7E 01 01 46 00 01 02 45 4b 0D //模式 2*/

  WARMING_SWITCH1 = 0x010120,
  /*7E E7 7E 01 01 20 00 01 00 21 23 0D // 报警开关1 全关
   *7E E7 7E 01 01 20 00 01 FF DE 22 0D// 报警开关 1 全开
   每位开关含义详见如下
   7e e7 7e 01 01 20 00 01 01 20 24 0d //Amp3 温度开关
   7e e7 7e 01 01 20 00 01 02 23 25 0d //Amp2 温度开关
   7e e7 7e 01 01 20 00 01 04 25 27 0d //Amp1 温度开关
   7e e7 7e 01 01 20 00 01 08 29 2b 0d //腔体 2 湿度开关
   7e e7 7e 01 01 20 00 01 10 31 33 0d //水流量 1 开关
   7e e7 7e 01 01 20 00 01 20 01 43 0d //腔体 1 湿度开关
   7e e7 7e 01 01 20 00 01 40 61 63 0d //晶体 2 温度开关
   7e e7 7e 01 01 20 00 01 80 a1 a3 0d //晶体 1 温度开关*/

  WARMING_SWITCH2 = 0x01012c,
  /*7E E7 7E 01 01 2c 00 01 00 2d 2f 0D // 报警开关2 全关
   * 7e e7 7e 01 01 2c 00 01 FF d2 2e 0d// 报警开关 2 全开
每位开关含义详见如下
7E E7 7E 01 01 2c 00 01 01 2c 30 0D//腔体 1 温度开关
7E E7 7E 01 01 2c 00 01 02 2f 31 0D//腔体 2 温度开关*/
  WARMING_SWITCH3 = 0x01013f,
  /*7E E7 7E 01 01 3f 00 01 00 3e 42 0D // 报警开关 3 全关
   7e e7 7e 01 01 3f 00 01 FF c1 41 0d // 报警开关 3 全开
每位开关含义详见如下
7e e7 7e 01 01 3f 00 01 02 3c 44 0d //Amp5 温度开关
7e e7 7e 01 01 3f 00 01 04 3a 46 0d //Amp4 温度开关
7E E7 7E 01 01 3F 00 01 10 2e 52 0D //水流量 2 开关
7E E7 7E 01 01 3F 00 01 20 1E 62 0D //晶体 5 温度开关
7E E7 7E 01 01 3F 00 01 40 7e 82 0D //晶体 4 温度开关
7E E7 7E 01 01 3F 00 01 80 be c2 0D //晶体 3 温度开关*/
  SEED_SET1 = 0x01011C,
  /*7E E7 7E 01 01 1c 00 02 00 00 1e 20 0D // seed
current1 setting 0-2000mA 步长 1mA
  7E E7 7E 01 01 1c 00 02 01 f4 eb 15 0D //
  7E E7 7E 01 01 1c 00 02 03 e8 f5 0b 0D //*/
  SEED_SET2 = 0x01011D,
  SEED_SET3 = 0x01011E,

  POD_OR_PSO = 0x010158,

  /*7E E7 7E 01 01 58 00 02 00 1f 45 7b 0D//POD 模式
7E E7 7E 01 01 58 00 02 00 1e 44 7a 0D//PSO 模式*/

  DELAY4_SET = 0x010123,
  DELAY5_SET,
  F_FREQ1_SET, /*
7E E7 7E 01 01 23 00 02 00 96 b7 bd 0D //延时 4/时序 1 延时 0-744 步长 1
7E E7 7E 01 01 24 00 02 00 96 b0 be 0D //延时 5/消耗 1 延时 0-744 步长 1
7e e7 7e 01 01 25 00 01 FF db 27 0d //分频 0 2-255 步长 1*/
  F_FREQ2_SET = 0x010156,
  F_FREQ3_SET,
  /*
7e e7 7e 01 01 56 00 01 FF a8 58 0d //分频 1 2-255 步长 1
7e e7 7e 01 01 57 00 01 FF a9 59 0d //分频 2 2-255 步长 1
*/
  DA_SET = 0x01010B,
  DA_SWITCH,
  /*7e e7 7e 01 01 0b 00 02 00 01 08 10 0d //DA 功率幅值控制 0.000-5.000v
  步长为0.001v
  7e e7 7e 01 01 0b 00 02 13 88 92 aa 0d //DA
  7E E7 7E 01 01 0c 00 01 00 0d 0f 0D //DA 幅值停止 功率幅值设定的启动停止
  7E E7 7E 01 01 0c 00 01 01 0c 10 0D //DA 幅值启动*/
  BFB_SWITCH = 0x010119, /*7E E7 7E 01 01 19 00 01 00 18 1c 0D //功率百分比开

                         7E E7 7E 01 01 19 00 01 01 19 1d 0D //模拟量开*/
  SX1_DELAY = 0x010123,
  SX2_DELAY = 0x010126,
  SX3_DELAY,
  SX4_DELAY,
  SX5_DELAY,
  SX6_DELAY = 0x010132, /*
 7E E7 7E 01 01 23 00 02 00 96 b7 bd 0D//时序 1 延时 0-744 步长 1
 7E E7 7E 01 01 26 00 02 00 96 b2 c0 0D //时序 2 延时 0-744 步长 1
 7E E7 7E 01 01 27 00 02 00 96 b3 c1 0D //时序 3 延时 0-744 步长 1
 7E E7 7E 01 01 28 00 02 00 96 bc c2 0D //时序 4 延时 0-744 步长 1
 7E E7 7E 01 01 29 00 02 00 96 bd c3 0D //时序 5 延时 0-744 步长 1
 7E E7 7E 01 01 32 00 02 00 96 bd c3 0D //时序 6 延时 0-744 步长 1
 */
  SX1_MK = 0x010147,
  SX2_MK,
  SX3_MK,
  SX4_MK,
  SX5_MK,
  XH1_DELAY = 0x010124,
  XH2_DELAY = 0x010136,
  XH3_DELAY,
  XH4_DELAY,
  XH5_DELAY,
  XH6_DELAY,
  XH7_DELAY = 0x010142,
  XH8_DELAY,
  XH9_DELAY,
  XH10_DELAY,
  /*7E E7 7E 01 01 24 00 02 00 96 b0 be 0D //消耗 1 延时 0-744 步长1
  7E E7 7E 01 01 36 00 02 00 96 a2 d0 0D //消耗 2 延时 0-744 步长 1
  7E E7 7E 0101 37 00 02 00 96 a3 d1 0D //消耗 3 延时 0-744 步长 1
  7E E7 7E 01 01 38 00 02 00 96 ac d2 0D //消耗 4 延时 0-744 步长 1
  7E E7 7E 01 01 39 00 02 00 96 ad d3 0D //消耗 5 延时 0-744 步长 1
  7E E7 7E 01 01 3a 00 02 00 96 ae d4 0D //消耗 6 延时 0-744 步长 1
  7E E7 7E 01 01 42 00 02 00 96 d6 dc 0D //消耗 7 延时 0-744 步长 1
  7E E7 7E 01 01 43 00 02 00 96 d7 dd 0D//消耗 8 延时 0-744 步长 1
  7E E7 7E 01 01 44 00 02 00 96 d0 de 0D //消耗 9 延时 0-744 步长 1
  7E E7 7E 01 01 45 00 02 00 96 d1 df 0D //消耗 10 延时 0-744 步长 1*/

  XH1_MK = 0x01014c, /*7E E7 7E 01 01 4c 00 02 00 96 d8 e6 0D//消耗 1 脉宽 0-744
 步长 1 7E E7 7E 01 01 4d 00 02 00 96 d9 e7 0D //消耗 2 脉宽 0-744 步长 1
 7E E7 7E 01 01 4e 00 02 00 96 da e8 0D //消耗 3 脉宽 0-744 步长 1*/
  XH2_MK,
  XH3_MK,
  XH4_MK,
  XH5_MK,
  XH6_MK,
  XH7_MK,
  XH8_MK,
  XH9_MK,
  XH10_MK,
  KEY1_INPUT = 0x01012b,
  KEY2_INPUT = 0x01011f, /*7e e7 7e 01 01 2b 00 04 00 00 00 00 2f 31 0d //密码 1
 输入 7e e7 7e 01 01 1f 00 04 00 00 00 00 1b 25 0d //密码 2 输入*/
  CHANGE_POINT = 0x010121, /*7e e7 7e 01 01 21 00 00 21 23 0d // 换点*/
  QDNC_QDC = 0x01012D, /*7e e7 7e 01 01 2d 00 01 00 2c 30 0d //QDNC 模式切换
 7e e7 7e 01 01 2d 00 01 01 2d 31 0d //QDC 模式切换*/

  GL_CS = 0x010159, /*7E E7 7E 01 01 59 00 02 00 96 c1 ef 0D//功率乘数 0-50.0W
 步长 0.1W 7E E7 7E 01 01 5a 00 02 00 96 ce f4 0D //功率偏置 0-50.0W 步长 0.1W*/
  GL_PZ,
  KG_RESET = 0x01015B, /*7E E7 7E 01 01 5B 00 01 01 5B 5F 0D //开盖复位*/
  F_MODE_SWITCH = 0x01013E, /*7e e7 7e 01 01 3e 00 01 00 3f 41 0d //20M 模式切换
 7e e7 7e 01 01 3e 00 01 01 3e 42 0d //50M 模式切换*/
  WARM_SWITCH = 0x010114,
  TIME1_PIN = 0x01015c,
  TIME2_PIN,
  TIME3_PIN = 0x0101ff, /*7e e7 7e 01 01 5c 00 07 71 77 65 72 74 79 00 47 11 0d
 //时间密码 1 输入 密码为 qwerty
 //00 密码不正确 01 密码正确 02 密码已使用
 7e e7 7e 01 01 5d 00 07 61 73 64 66 67 68 00 45 d3 0d //时间密码 2 输入 密码为
 asdfgh
 //00 密码不正确 01 密码正确 02 密码已使用
 7e e7 7e 01 01 ff 00 07 7a 78 63 76 62 6e 00 e3 a3 0d //时间密码 3 输入 密码为
 zxcvbn
 //00 密码不正确 01 密码正确 02 密码已使用
 */
  POWER_CUR = 0x01015f,
  DANGWEI,
  CUR_SWITCH,
  CUR_ENABLE,
  CUR_BURST,


  SL1LIMITSET = 0x010168,
  SL2LIMITSET,
  SLZSET,
  SLFSET,

/*
7e e7 7e 01 01 68 00 02 00 00 6a 6c 0d //⽔流量 1 最⼩值设定 0-100.0L/min
7e e7 7e 01 01 68 00 02 03 e8 81 57 0d
7e e7 7e 01 01 69 00 02 00 00 6b 6d 0d //⽔流量 2 最⼩值设定 0-100.0L/min
7e e7 7e 01 01 69 00 02 03 e8 80 58 0d
7e e7 7e 01 01 6a 00 02 00 00 68 6e 0d //⽔流量校正正设定 0-60
7e e7 7e 01 01 6a 00 02 00 3c 54 aa 0d
7e e7 7e 01 01 6b 00 02 00 00 69 6f 0d //⽔流量校正负设定 0-60
7e e7 7e 01 01 6b 00 02 00 3c 55 ab 0d
*/

  GATE_FRE = 0x01016c,  //gate分频1, 200分频，步进1
  GATE_FRE_2 = 0x01016d,  //gate分频2, 200分频，步进1
  GL_NK_2 = 0x01016e, // 功率2内控百分比控设定0%  0%-100% 步长1%
  DEBUG_SWITCH_2 = 0x01016f, // 调试2关闭  只针对pso模式QDNC2模式下



  QUERY1 = 0x010115, /*
7e e7 7e 01 01 15 00 00 15 17 0d //查询信息 1
*/
  QUERY2 = 0x01015e

};
const unsigned int mHead = 0x7EE77E;

#endif  // ORDER_H
